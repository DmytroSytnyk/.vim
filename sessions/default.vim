" ~/.vim/sessions/default.vim: Vim session script.
" Created by session.vim 1.5 on 10 February 2014 at 15:12:29.
" Open this file in Vim and run :source % to restore your session.

set guioptions=
silent! set guifont=
if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'slate' | colorscheme slate | endif
call setqflist([{'lnum': 0, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h', 'text': 'make: Entering directory ''/home/d314/doc/progs/PAmPERO/tests/resolvents/exact_resolvent'''}, {'lnum': 0, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h', 'text': '===============debug========= test.cc'}, {'lnum': 0, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h', 'text': 'flags -DHAVE_CONFIG_H -DHAVE_ISNAN -ggdb -DBOOST_NO_HASH -DBOOST_NO_SLIST -DDEBUG -Wall -W -Wpointer-arith -Wwrite-strings -Wsynth -Wsign-compare -Wswitch -Wno-long-long -std=c++0x -Wa,--compress-debug-sections -fPIC -I/home/d314/soft/p4est/p4est//DEBUG/include -march=pentium4 -I/home/d314/soft/dealii/deal.II-7.2.0/include -I/home/d314/soft/dealii/deal.II-7.2.0/include/deal.II -I/home/d314/soft/dealii/deal.II-7.2.0/contrib/boost-1.49.0/include -I/home/d314/soft/dealii/deal.II-7.2.0/contrib -I/home/d314/soft/dealii/deal.II-7.2.0/include -I/home/d314/soft/petsc/petsc//include -I/home/d314/soft/petsc/petsc//linux-gnu-c-debug/include -I/home/d314/soft/slepc/slepc//include -I/home/d314/soft/slepc/slepc//linux-gnu-c-debug/include -I/home/d314/soft/slepc/slepc//linux-gnu-c-debug/conf -I/usr/include'}, {'lnum': 0, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h', 'text': 'test.cc: In function ‘int main(int, char**)’:'}, {'lnum': 34, 'col': 49, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': ' error: no match for ‘operator/’ in ‘ex_res_val / std::operator-<double>((*(const std::complex<double>*)(& z)), (* & arg.pampero::EigenStateArgument<dim, spacedim>::eigenvalue<1, 2>()))’'}, {'lnum': 34, 'col': 49, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': ' note: candidates are:'}, {'lnum': 1985, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/soft/dealii/deal.II-7.2.0/include/deal.II/base/tensor.h', 'text': ' note: template<int rank, int dim> dealii::Tensor<rank, dim> dealii::operator/(const dealii::Tensor<rank, dim>&, double)'}, {'lnum': 1985, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/soft/dealii/deal.II-7.2.0/include/deal.II/base/tensor.h', 'text': ' note:   template argument deduction/substitution failed:'}, {'lnum': 34, 'col': 49, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': ' note:   ‘SeqVec {aka dealii::Vector<double>}’ is not derived from ‘const dealii::Tensor<rank, dim>’'}, {'lnum': 1928, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/soft/dealii/deal.II-7.2.0/include/deal.II/base/tensor.h', 'text': ' note: template<int rank, int dim, class Number> dealii::Tensor<rank_, dim, Number> dealii::operator/(const dealii::Tensor<rank_, dim, Number>&, Number)'}, {'lnum': 1928, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/soft/dealii/deal.II-7.2.0/include/deal.II/base/tensor.h', 'text': ' note:   template argument deduction/substitution failed:'}, {'lnum': 34, 'col': 49, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': ' note:   ‘SeqVec {aka dealii::Vector<double>}’ is not derived from ‘const dealii::Tensor<rank_, dim, Number>’'}, {'lnum': 1404, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/soft/dealii/deal.II-7.2.0/include/deal.II/base/tensor_base.h', 'text': ' note: template<int dim> dealii::Tensor<1, dim> dealii::operator/(const dealii::Tensor<1, dim>&, double)'}, {'lnum': 1404, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/soft/dealii/deal.II-7.2.0/include/deal.II/base/tensor_base.h', 'text': ' note:   template argument deduction/substitution failed:'}, {'lnum': 34, 'col': 49, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': ' note:   ‘SeqVec {aka dealii::Vector<double>}’ is not derived from ‘const dealii::Tensor<1, dim>’'}, {'lnum': 1347, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/soft/dealii/deal.II-7.2.0/include/deal.II/base/tensor_base.h', 'text': ' note: template<int dim, class Number> dealii::Tensor<1, dim, Number> dealii::operator/(const dealii::Tensor<1, dim, Number>&, Number)'}, {'lnum': 1347, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/soft/dealii/deal.II-7.2.0/include/deal.II/base/tensor_base.h', 'text': ' note:   template argument deduction/substitution failed:'}, {'lnum': 34, 'col': 49, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': ' note:   ‘SeqVec {aka dealii::Vector<double>}’ is not derived from ‘const dealii::Tensor<1, dim, Number>’'}, {'lnum': 427, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/usr/lib/gcc/i686-pc-linux-gnu/4.7.3/include/g++-v4/complex', 'text': ' note: template<class _Tp> std::complex<_Tp> std::operator/(const _Tp&, const std::complex<_Tp>&)'}, {'lnum': 427, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/usr/lib/gcc/i686-pc-linux-gnu/4.7.3/include/g++-v4/complex', 'text': ' note:   template argument deduction/substitution failed:'}, {'lnum': 34, 'col': 49, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': ' note:   deduced conflicting types for parameter ‘_Tp’ (‘dealii::Vector<double>’ and ‘double’)'}, {'lnum': 418, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/usr/lib/gcc/i686-pc-linux-gnu/4.7.3/include/g++-v4/complex', 'text': ' note: template<class _Tp> std::complex<_Tp> std::operator/(const std::complex<_Tp>&, const _Tp&)'}, {'lnum': 418, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/usr/lib/gcc/i686-pc-linux-gnu/4.7.3/include/g++-v4/complex', 'text': ' note:   template argument deduction/substitution failed:'}, {'lnum': 34, 'col': 49, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': ' note:   ‘SeqVec {aka dealii::Vector<double>}’ is not derived from ‘const std::complex<_Tp>’'}, {'lnum': 409, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/usr/lib/gcc/i686-pc-linux-gnu/4.7.3/include/g++-v4/complex', 'text': ' note: template<class _Tp> std::complex<_Tp> std::operator/(const std::complex<_Tp>&, const std::complex<_Tp>&)'}, {'lnum': 409, 'col': 5, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/usr/lib/gcc/i686-pc-linux-gnu/4.7.3/include/g++-v4/complex', 'text': ' note:   template argument deduction/substitution failed:'}, {'lnum': 34, 'col': 49, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': ' note:   ‘SeqVec {aka dealii::Vector<double>}’ is not derived from ‘const std::complex<_Tp>’'}, {'lnum': 0, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h', 'text': 'test.cc: At global scope:'}, {'lnum': 0, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h', 'text': 'exact_resolvent.h: In instantiation of ‘pampero::ExactResolvent<dim, spacedim>::ExactResolvent(ompi_communicator_t* const&) [with int dim = 1; int spacedim = 2; MPI_Comm = ompi_communicator_t*]’:'}, {'lnum': 18, 'col': 46, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/laplace_exact_resolvent.h', 'text': '   required from ‘pampero::LaplaceExactResolvent<dim, spacedim>::LaplaceExactResolvent(ompi_communicator_t* const&, const double&, const double&) [with int dim = 1; int spacedim = 2; MPI_Comm = ompi_communicator_t*]’'}, {'lnum': 26, 'col': 32, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': '   required from here'}, {'lnum': 0, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h', 'text': 'function.h: In instantiation of ‘pampero::AbstractFunction<n, ArgType*, ResType*>::AbstractFunction() [with int n = 1; ArgType = pampero::ExactResolventArgument<1, 2>; ResType = dealii::Vector<double>]’:'}, {'lnum': 278, 'col': 26, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/resolvent.h', 'text': '   required from ‘pampero::AbstractResolvent<ArgType, ResType>::AbstractResolvent(ompi_communicator_t* const&, pampero::domain_type_t, const pampero::BaseSpectrum*, bool) [with ArgType = pampero::ExactResolventArgument<1, 2>; ResType = dealii::Vector<double>; MPI_Comm = ompi_communicator_t*]’'}, {'lnum': 72, 'col': 64, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/exact_resolvent.h', 'text': '   required from ‘pampero::ExactResolvent<dim, spacedim>::ExactResolvent(ompi_communicator_t* const&) [with int dim = 1; int spacedim = 2; MPI_Comm = ompi_communicator_t*]’'}, {'lnum': 18, 'col': 46, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/laplace_exact_resolvent.h', 'text': '   required from ‘pampero::LaplaceExactResolvent<dim, spacedim>::LaplaceExactResolvent(ompi_communicator_t* const&, const double&, const double&) [with int dim = 1; int spacedim = 2; MPI_Comm = ompi_communicator_t*]’'}, {'lnum': 26, 'col': 32, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': '   required from here'}, {'lnum': 0, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h', 'text': 'exact_resolvent.h: In instantiation of ‘SeqVec pampero::ExactResolvent<dim, spacedim>::corrected_resolvent_residue(const ComplexScalar&) [with int dim = 1; int spacedim = 2; SeqVec = dealii::Vector<double>; ComplexScalar = std::complex<double>]’:'}, {'lnum': 69, 'col': 1, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/test.cc', 'text': '   required from here'}, {'lnum': 93, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/Makefile', 'text': ' recipe for target ''test.g.o'' failed'}, {'lnum': 0, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h', 'text': 'make: *** [test.g.o] Error 1'}, {'lnum': 0, 'col': 0, 'valid': 1, 'vcol': 0, 'nr': -1, 'type': '', 'pattern': '', 'filename': '/home/d314/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h', 'text': 'make: Leaving directory ''/home/d314/doc/progs/PAmPERO/tests/resolvents/exact_resolvent'''}])
let SessionLoad = 1
if &cp | set nocp | endif
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/.vim
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +172 ~/doc/progs/PAmPERO/tests/dealii_resolvent/vectors.h
badd +156 ~/doc/progs/PAmPERO/tests/dealii_resolvent/resolvent.h
badd +25 ~/doc/progs/PAmPERO/tests/dealii_resolvent/exact_resolvent.h
badd +675 operator_function.h
badd +37 test.cc
badd +44 laplace_exact_resolvent.h
badd +90 /usr/include/bits/types.h
badd +186 function.h
badd +16 types.h
badd +1 laplace_exact_resolvent.cc
badd +56 dealii_resolvent.h
badd +1 changes
args test.cc
set lines=26 columns=210
edit test.cc
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
let s:l = 1 - ((0 * winheight(0) + 12) / 25)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
1
normal! 0
tabnext 1
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
tabnext 1
1wincmd w

" vim: ft=vim ro nowrap smc=128
